{"version":3,"sources":["components/SvgFullCard/SvgFullCard.tsx","components/SvgSingleCard/SvgSingleCard.tsx","components/NavMenu/NavMenu.tsx","components/WhatIsSvg/WhatIsSvg.tsx","components/WhySvg/WhySvg.tsx","components/Others/Others.tsx","components/Path/Path.tsx","components/PathExample/PathExample.tsx","resources/objects.tsx","resources/exampleList.tsx","App.tsx","index.tsx"],"names":["SvgFullCard","state","svg","props","docURL","handleChangeSvg","e","key","target","newSvg","value","setState","handleChangeAnimation","index","newAnimation","Object","assign","animations","getHtmlCode","defaultHtmlElement","htmlElement","tag","content","filter","keys","map","forEach","animation","attributeName","push","tmpFilter","filters","id","prop","replace","toLowerCase","animationString","reduce","acc","getDocLinkSvg","name","docLink","formattedName","getDocLinkAnimation","render","CardGroup","style","width","padding","Card","Header","header","Body","height","React","createElement","text","Footer","className","bg","InputGroup","Prepend","Text","href","rel","FormControl","disabled","onChange","_","Component","SvgSingleCard","marginTop","marginLeft","marginBottom","length","NavMenu","toggle","toggleMenu","color","to","onClick","WhatIsSvg","x","y","transform","type","from","dur","repeatCount","WhySvg","Others","Path","d","stroke","strokeWidth","fill","cx","cy","r","fontSize","fontFamily","textAnchor","dx","dy","viewBox","strokeLinecap","strokeLinejoin","animate","animateTransform","circle","Array","rectangle","rx","ry","fillOpacity","strokeOpacity","line","x1","x2","y1","y2","generalExamples","objects","points","fillRule","replaceAnimation","shape","newShape","replaceFilter","animationExamples","path","filterExamples","stdDeviation","baseFrequency","numOctaves","scale","xChannelSelector","yChannelSelector","in","operator","radius","App","bodyContent","this","example","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9255c3fe.chunk.js","sourcesContent":["import React from 'react';\nimport {Card, InputGroup, FormControl, CardGroup} from 'react-bootstrap';\nimport {shape, animation, filter} from '../../resources/objects';\n\ntype cardProps = {\n  header: string;\n  svg: shape;\n};\n\nexport default class SvgFullCard extends React.Component<cardProps> {\n  state = {\n    svg: this.props.svg,\n  };\n\n  docURL = 'https://developer.mozilla.org/en-US/docs/Web/SVG';\n\n  handleChangeSvg = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    key: keyof shape\n  ): void => {\n    if (e && e.target) {\n      const newSvg: shape = this.state.svg;\n      (newSvg as any)[key] = e.target.value;\n      this.setState({svg: newSvg});\n    }\n  };\n\n  handleChangeAnimation = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    index: number,\n    key: keyof animation\n  ): void => {\n    if (e && e.target) {\n      const newAnimation = Object.assign({}, this.state.svg.animations[index]);\n      newAnimation[key] = e.target.value;\n      const newSvg = this.state.svg;\n      newSvg.animations[index] = newAnimation;\n      this.setState({svg: newSvg});\n    }\n  };\n\n  getHtmlCode = (\n    defaultHtmlElement: shape | animation | filter | null = null\n  ): string => {\n    const htmlElement: shape | animation | filter =\n      defaultHtmlElement || this.state.svg;\n    let props = '';\n    let tag = '';\n    let content = '';\n    let filter = '';\n    const animations: string[] = [];\n    Object.keys(htmlElement).map((key: string) => {\n      if (key === 'tag') {\n        tag = htmlElement.tag;\n      } else if (key === 'text') {\n        content = (htmlElement as any)[key];\n      } else if (key === 'animations') {\n        (htmlElement as shape).animations.forEach((animation: animation) => {\n          if (animation.attributeName) {\n            animations.push(this.getHtmlCode(animation));\n          }\n        });\n      } else if (key === 'filters') {\n        const tmpFilter = (htmlElement as shape).filters[0];\n        if (tmpFilter) {\n          filter = `<filter id=${tmpFilter.id}>${this.getHtmlCode(\n            tmpFilter\n          )}</filter>`;\n        }\n      } else if (key === 'id') {\n      } else {\n        const value = (htmlElement as any)[key];\n        if (value) {\n          const prop = key.replace(/([A-Z])/g, '-$1').toLowerCase();\n          props = ` ${props} ${prop}=\"${value}\"`;\n        }\n      }\n      return '';\n    });\n    const animationString = animations.reduce(\n      (acc, value) => `${acc} ${value}`,\n      ''\n    );\n    return `${filter} <${tag} ${props}>${animationString}${content}</${tag}>`;\n  };\n\n  getDocLinkSvg = (name: string): string => {\n    let docLink = '';\n    if (name === 'tag') {\n      docLink = `${this.docURL}/Element/${this.state.svg.tag}`;\n    } else {\n      const formattedName = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n      docLink = `${this.docURL}/Attribute/${formattedName}`;\n    }\n    return docLink;\n  };\n\n  getDocLinkAnimation = (name: string, index: number): string => {\n    let docLink = '';\n    if (name === 'tag') {\n      docLink = `${this.docURL}/Element/${this.state.svg.animations[index].tag}`;\n    } else {\n      docLink = `${this.docURL}/Attribute/${name}`;\n    }\n    return docLink;\n  };\n\n  render = (): JSX.Element => {\n    return (\n      <CardGroup style={{width: '60rem', padding: '1rem'}}>\n        <Card style={{width: '18rem'}}>\n          <Card.Header>{this.props.header}</Card.Header>\n          <Card.Body style={{padding: '0rem'}}>\n            <svg width='18rem' height='9rem'>\n              {React.createElement(\n                this.props.svg.tag,\n                this.props.svg,\n                this.props.svg.text,\n                React.createElement(\n                  this.props.svg.animations[0].tag,\n                  this.props.svg.animations[0]\n                ),\n                React.createElement(\n                  this.props.svg.animations[1].tag,\n                  this.props.svg.animations[1]\n                ),\n                React.createElement(\n                  this.props.svg.animations[2].tag,\n                  this.props.svg.animations[2]\n                ),\n                React.createElement(\n                  this.props.svg.animations[3].tag,\n                  this.props.svg.animations[3]\n                )\n              )}\n            </svg>\n          </Card.Body>\n          <Card.Footer\n            className='text-muted overflow-auto'\n            style={{height: '5rem', padding: '0rem'}}>\n            <code>{this.getHtmlCode()}</code>\n          </Card.Footer>\n        </Card>\n        <Card\n          bg='light'\n          className='overflow-auto'\n          style={{padding: '1rem', height: '18rem'}}>\n          {Object.keys(this.state.svg).map((key, index) => {\n            return (\n              key !== 'animations' && (\n                <InputGroup className='mb-2' key={index}>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>\n                      <a\n                        href={this.getDocLinkSvg(key)}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {key}\n                      </a>\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl\n                    disabled={key === 'tag'}\n                    value={(this.state.svg as any)[key]}\n                    onChange={(\n                      e: React.ChangeEvent<HTMLInputElement>\n                    ): void => {\n                      this.handleChangeSvg(e, key as keyof shape);\n                    }}\n                  />\n                </InputGroup>\n              )\n            );\n          })}\n        </Card>\n        <Card\n          bg='light'\n          className='overflow-auto'\n          style={{padding: '1rem', height: '18rem'}}>\n          {this.state.svg.animations.map((_, index) =>\n            Object.keys(this.state.svg.animations[index]).map(key => (\n              <InputGroup className='mb-2' key={`${index}-${key}`}>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>\n                    <a\n                      href={this.getDocLinkAnimation(key, index)}\n                      target='_blank'\n                      rel='noopener noreferrer'>\n                      {key}\n                    </a>\n                  </InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                  disabled={key === 'tag'}\n                  value={(this.state.svg.animations[index] as any)[key]}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>): void => {\n                    this.handleChangeAnimation(\n                      e,\n                      index,\n                      key as keyof animation\n                    );\n                  }}\n                />\n              </InputGroup>\n            ))\n          )}\n        </Card>\n      </CardGroup>\n    );\n  };\n}\n","import React from 'react';\nimport {Card} from 'react-bootstrap';\nimport SvgFullCard from '../SvgFullCard/SvgFullCard';\n\nexport default class SvgSingleCard extends SvgFullCard {\n  render = (): JSX.Element => {\n    return (\n      <Card\n        style={{\n          width: '21rem',\n          marginTop: '1rem',\n          marginLeft: '1rem',\n          marginBottom: '1rem',\n        }}>\n        <Card.Header>{this.props.header}</Card.Header>\n        <Card.Body style={{padding: '0rem'}}>\n          <svg width='18rem' height='9rem'>\n            {(this.props.svg as any)['filters'].length === 1 &&\n              React.createElement(\n                'filter',\n                {id: (this.props.svg as any)['filters'][0].id},\n                React.createElement(\n                  this.props.svg.filters[0].tag,\n                  this.props.svg.filters[0]\n                )\n              )}\n            {React.createElement(\n              this.props.svg.tag,\n              this.props.svg,\n              this.props.svg.text,\n              React.createElement(\n                this.props.svg.animations[0].tag,\n                this.props.svg.animations[0]\n              )\n            )}\n          </svg>\n        </Card.Body>\n        <Card.Footer\n          className='text-muted overflow-auto'\n          style={{height: '5rem', padding: '0rem'}}>\n          <code>{this.getHtmlCode()}</code>\n        </Card.Footer>\n      </Card>\n    );\n  };\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default class NavMenu extends React.Component {\n  state = {\n    toggle: false,\n  };\n\n  toggleMenu = (): void => {\n    this.setState({toggle: !this.state.toggle});\n  };\n\n  render = (): JSX.Element => {\n    return (\n      <div>\n        <ul\n          className={`navbar-nav bg-gradient-primary sidebar sidebar-dark accordion ${\n            this.state.toggle ? 'toggled' : ''\n          }`}\n          id='accordionSidebar'>\n          <div className='sidebar-brand d-flex align-items-center justify-content-center'>\n            <div className='sidebar-brand-text mx-3' style={{color: 'white'}}>\n              Learning SVG\n            </div>\n          </div>\n          <hr className='sidebar-divider my-0'></hr>\n          <div className='sidebar-heading'>Documentation</div>\n          <li className='nav-item'>\n            <Link to='/why-svg' className='nav-link'>\n              <span>Why SVG</span>\n            </Link>\n          </li>\n          <li className='nav-item'>\n            <Link to='/what-is-svg' className='nav-link'>\n              <span>What is SVG</span>\n            </Link>\n          </li>\n          <li className='nav-item'>\n            <Link to='/path' className='nav-link'>\n              <span>Path</span>\n            </Link>\n          </li>\n          <hr className='sidebar-divider'></hr>\n          <div className='sidebar-heading'>Playground</div>\n          <li className='nav-item'>\n            <Link to='/playground' className='nav-link'>\n              <span>All together</span>\n            </Link>\n          </li>\n          <hr className='sidebar-divider'></hr>\n          <div className='sidebar-heading'>Examples</div>\n          <li className='nav-item'>\n            <Link to='/shapes' className='nav-link'>\n              <span>Shapes</span>\n            </Link>\n          </li>\n          <li className='nav-item'>\n            <Link to='/animations' className='nav-link'>\n              <span>Animations</span>\n            </Link>\n          </li>\n          <li className='nav-item'>\n            <Link to='/filters' className='nav-link'>\n              <span>Filters</span>\n            </Link>\n          </li>\n          <li className='nav-item'>\n            <Link to='/path-example' className='nav-link'>\n              <span>Path</span>\n            </Link>\n          </li>\n          <li className='nav-item'>\n            <Link to='/others' className='nav-link'>\n              <span>Others</span>\n            </Link>\n          </li>\n          <div className='text-center d-none d-md-inline'>\n            <button\n              className='rounded-circle border-0'\n              id='sidebarToggle'\n              onClick={this.toggleMenu}></button>\n          </div>\n        </ul>\n      </div>\n    );\n  };\n}\n","import React from 'react';\nimport './WhatIsSvg.scss';\n\nexport default class WhatIsSvg extends React.Component {\n  render = (): JSX.Element => {\n    return (\n      <svg width='1100px' height='680px'>\n        <text x='0' y='0'>\n          <tspan x='65' y='75' className='svg-title'>\n            What is SVG?\n          </tspan>\n          <tspan x='30' y='130'>\n            Scalable Vector Graphics (SVG) is an XML-based markup\n          </tspan>\n          <tspan x='30' y='150'>\n            language for describing two dimensional based vector graphics.\n          </tspan>\n          <tspan x='30' y='170' className='svg-bold'>\n            SVG is essentially to graphics what HTML is to text.\n          </tspan>\n          <tspan x='90' y='210' transform='rotate(350 90 210)'>\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/SVG'\n              target='_blank'\n              className='svg-link'\n              rel='noopener noreferrer'>\n              Source\n            </a>\n          </tspan>\n          <tspan x='150' y='240' transform='rotate(350 150 240)'>\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial'\n              target='_blank'\n              className='svg-link'\n              rel='noopener noreferrer'>\n              Getting Started Tutorial\n            </a>\n          </tspan>\n          <tspan x='30' y='270'>\n            SVG is a text-based open Web standard. It is explicitly\n          </tspan>\n          <tspan x='30' y='290'>\n            designed to work with other web standards such as CSS, DOM, and\n            SMIL.\n          </tspan>\n          <tspan x='90' y='340' transform='rotate(350 90 330)'>\n            <a\n              href='http://www1.plurib.us/svg_gallery/'\n              target='_blank'\n              className='svg-link'\n              rel='noopener noreferrer'>\n              SVG Art Gallery\n            </a>\n          </tspan>\n          <tspan x='180' y='370' transform='rotate(350 150 330)'>\n            <a\n              href='http://starkravingfinkle.org/projects/demo/svg-bubblemenu-in-html.xml'\n              target='_blank'\n              className='svg-link'\n              rel='noopener noreferrer'>\n              SVG Bubble Menu Example\n            </a>\n          </tspan>\n          <tspan x='30' y='390'>\n            SVG images and their related behaviors are defined in XML\n          </tspan>\n          <tspan x='30' y='410'>\n            text files which means they can be searched, indexed,\n          </tspan>\n          <tspan x='30' y='430'>\n            scripted and compressed. Additionally this means they can be\n          </tspan>\n          <tspan x='30' y='450'>\n            created and edited with any text editor and with drawing software.{' '}\n          </tspan>\n          <tspan x='135' y='485' className='svg-note'>\n            As you probably already noticed\n          </tspan>\n          <tspan x='135' y='500' className='svg-note'>\n            all this page section was made with SVG\n          </tspan>\n          <tspan x='135' y='515' className='svg-note'>\n            feel free to inspect the elements\n          </tspan>\n          <tspan x='30' y='550'>\n            SVG is an open standard developed by the World Wide Web\n          </tspan>\n          <tspan x='30' y='570'>\n            Consortium (W3C) since 1999.\n          </tspan>\n        </text>\n        <text>\n          <tspan x='400' y='620'>\n            &lt;svg width=&apos;###px&apos; height=&apos;###px&apos;&gt;\n          </tspan>\n          <tspan x='430' y='640'>\n            content here!\n          </tspan>\n          <tspan x='400' y='660'>\n            &lt;/svg&gt;\n          </tspan>\n        </text>\n        <image\n          x='600'\n          y='50'\n          href='https://upload.wikimedia.org/wikipedia/commons/thumb/0/02/SVG_logo.svg/800px-SVG_logo.svg.png'\n          height='350'\n          width='350'\n        />\n        <image\n          x='700'\n          y='450'\n          href='https://d1.awsstatic.com/logos/customers/Alert-Logic-logo.77c92024a8f644a898189b5fe47bf846f41c5a21.png'\n          height='150'\n          width='150'>\n          <animateTransform\n            attributeName='transform'\n            type='rotate'\n            from='0 775 525'\n            to='360 775 525'\n            dur='240s'\n            repeatCount='indefinite'\n          />\n        </image>\n      </svg>\n    );\n  };\n}\n","import React from 'react';\nimport './WhySvg.scss';\n\nexport default class WhySvg extends React.Component {\n  render = (): JSX.Element => {\n    return (\n      <svg width='1100px' height='680px'>\n        <text x='0' y='0'>\n          <tspan x='700' y='75' className='svg-title'>\n            Why SVG?\n          </tspan>\n          <tspan x='50' y='40' className='svg-subtitle'>\n            Scalability\n          </tspan>\n          <tspan x='50' y='70'>\n            One the major benefits of SVG is that they are resolution\n            independent.\n          </tspan>\n          <tspan x='50' y='90'>\n            This means that unlike file types such as JPG or PNG, SVGs retain\n            the same\n          </tspan>\n          <tspan x='50' y='110'>\n            quality no matter what screen resolution or size they are being at.\n          </tspan>\n          <tspan x='150' y='170' className='svg-subtitle'>\n            File size\n          </tspan>\n          <tspan x='150' y='200'>\n            Using SVGs can result in smaller file sizes than other file types\n            when optimized properly.\n          </tspan>\n          <tspan x='150' y='220'>\n            This is helpful when dealing with higher resolution screens, since\n            SVGs don’t need to be\n          </tspan>\n          <tspan x='150' y='240'>\n            created at larger sizes to accommodate the difference like raster\n            images do.\n          </tspan>\n          <tspan x='100' y='300' className='svg-subtitle'>\n            Editing capabilities\n          </tspan>\n          <tspan x='100' y='330'>\n            SVG files are unique in that they can be edited in graphic editing\n            programs (such as Illustrator or Sketch)\n          </tspan>\n          <tspan x='100' y='350'>\n            like other images, but also in a text editor where the markup can be\n            adjusted directly.\n          </tspan>\n          <tspan x='200' y='410' className='svg-subtitle'>\n            Performance\n          </tspan>\n          <tspan x='200' y='440'>\n            Using inline SVG is beneficial to the performance of a website\n            because it eliminates\n          </tspan>\n          <tspan x='200' y='460'>\n            the HTTP request needs to load in an image file. Since no file needs\n            to download,\n          </tspan>\n          <tspan x='200' y='480'>\n            this results in smaller loading times for a page.\n          </tspan>\n          <tspan x='150' y='540' className='svg-subtitle'>\n            Style control\n          </tspan>\n          <tspan x='150' y='570'>\n            Another benefit of using the inline SVG method is that it allows you\n            to control\n          </tspan>\n          <tspan x='150' y='590'>\n            the styles within your image. You can control properties such as\n            fill color,\n          </tspan>\n          <tspan x='150' y='610'>\n            stroke color, sizing, and more through CSS\n          </tspan>\n        </text>\n      </svg>\n    );\n  };\n}\n","import React from 'react';\nimport './Others.scss';\n\nexport default class Others extends React.Component {\n  render = (): JSX.Element => {\n    return (\n      <svg width='1100px' height='680px'>\n        <text x='0' y='0'>\n          <tspan x='65' y='75' className='svg-title'>\n            Helpful things\n          </tspan>\n          <tspan x='30' y='130'>\n            &lt;\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/SVG/Element/script'\n              target='_blank'\n              rel='noopener noreferrer'>\n              script\n            </a>\n            &gt;\n          </tspan>\n          <tspan x='70' y='150'>\n            You can script SVG elements\n          </tspan>\n          <tspan x='30' y='170'>\n            &lt;/script&gt;\n          </tspan>\n          <tspan x='330' y='200'>\n            &lt;\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/SVG/Element/use'\n              target='_blank'\n              rel='noopener noreferrer'>\n              use\n            </a>\n            &nbsp;href=&apos;#referenceToMyElement&apos; &gt;\n          </tspan>\n          <tspan x='370' y='220'>\n            You can duplicate an element and use it in other places\n          </tspan>\n          <tspan x='330' y='240'>\n            &lt;/use&gt;\n          </tspan>\n          <tspan x='30' y='270'>\n            &lt;\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title'\n              target='_blank'\n              rel='noopener noreferrer'>\n              title\n            </a>\n            &gt;\n          </tspan>\n          <tspan x='70' y='290'>\n            You can put titles to your svg (as an alt for a img)\n          </tspan>\n          <tspan x='30' y='310'>\n            &lt;/title&gt;\n          </tspan>\n          <tspan x='330' y='340'>\n            &lt;\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/SVG/Element/style'\n              target='_blank'\n              rel='noopener noreferrer'>\n              style\n            </a>\n            &gt;\n          </tspan>\n          <tspan x='370' y='360'>\n            You can use styles on your SVGs\n          </tspan>\n          <tspan x='330' y='380'>\n            &lt;/style&gt;\n          </tspan>\n          <tspan x='30' y='410'>\n            &lt;\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/SVG/Element/defs'\n              target='_blank'\n              rel='noopener noreferrer'>\n              defs\n            </a>\n            &gt;\n          </tspan>\n          <tspan x='70' y='430'>\n            You define SVG to use them in the future\n          </tspan>\n          <tspan x='30' y='450'>\n            &lt;/defs&gt;\n          </tspan>\n          <tspan x='330' y='480'>\n            &lt;\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/SVG/Element/switch'\n              target='_blank'\n              rel='noopener noreferrer'>\n              switch\n            </a>\n            &gt;\n          </tspan>\n          <tspan x='370' y='500'>\n            You can use switch to render or not SVGs after a param evaluation\n          </tspan>\n          <tspan x='330' y='520'>\n            &lt;/switch&gt;\n          </tspan>\n          <tspan x='30' y='550'>\n            &lt;\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/SVG/Element/g'\n              target='_blank'\n              rel='noopener noreferrer'>\n              g\n            </a>\n            &gt;\n          </tspan>\n          <tspan x='70' y='570'>\n            You can use g as a container for several SVG elements\n          </tspan>\n          <tspan x='30' y='590'>\n            &lt;/g&gt;\n          </tspan>\n        </text>\n      </svg>\n    );\n  };\n}\n","import React from 'react';\nimport './Path.scss';\n\nexport default class Path extends React.Component {\n  render = (): JSX.Element => {\n    return (\n      <svg width='1100px' height='680px'>\n        <text x='0' y='0'>\n          <tspan x='65' y='75' className='svg-title'>\n            Path\n          </tspan>\n          <tspan x='330' y='130'>\n            The path element is the most powerful element\n          </tspan>\n          <tspan x='330' y='150'>\n            in the SVG library of basic shapes.\n          </tspan>\n          <tspan x='330' y='170'>\n            You can use it to create lines, curves, arcs and more.\n          </tspan>\n          <tspan x='470' y='200' className='svg-bold'>\n            M = moveto\n          </tspan>\n          <tspan x='480' y='220' className='svg-bold'>\n            L = lineto\n          </tspan>\n          <tspan x='490' y='240' className='svg-bold'>\n            C = curveto\n          </tspan>\n          <tspan x='500' y='260' className='svg-bold'>\n            A = elliptical Arc\n          </tspan>\n          <tspan x='510' y='280' className='svg-bold'>\n            Z = closepath\n          </tspan>\n          <tspan x='610' y='200' className='svg-bold'>\n            H = horizontal lineto\n          </tspan>\n          <tspan x='620' y='220' className='svg-bold'>\n            V = vertical lineto\n          </tspan>\n          <tspan x='630' y='240' className='svg-bold'>\n            S = smooth curveto\n          </tspan>\n          <tspan x='640' y='260' className='svg-bold'>\n            Q = quadratic Bézier curve\n          </tspan>\n          <tspan x='650' y='280' className='svg-bold'>\n            T = smooth quadratic Bézier curveto\n          </tspan>\n          <tspan x='180' y='360'>\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths'\n              target='_blank'\n              className='svg-link'\n              rel='noopener noreferrer'>\n              Full documentation\n            </a>\n          </tspan>\n          <tspan x='30' y='390'>\n            Paths create complex shapes by combining multiple straight lines or\n            curved lines.\n          </tspan>\n          <tspan x='30' y='410'>\n            Complex shapes composed only of straight lines can be created as\n            polylines.\n          </tspan>\n          <tspan x='30' y='430'>\n            While polylines and paths can create similar-looking shapes,\n            polylines require\n          </tspan>\n          <tspan x='30' y='450'>\n            a lot of small straight lines to simulate curves and don&apos;t\n            scale well to larger sizes.\n          </tspan>\n          <tspan x='30' y='470'>\n            A good understanding of paths is important when drawing SVGs.\n          </tspan>\n          <tspan x='30' y='490'>\n            While creating complex paths using an XML editor or tspan editor is\n            not recommended,\n          </tspan>\n          <tspan x='30' y='510'>\n            understanding how they work will allow you to identify and repair\n            display issues in SVGs.\n          </tspan>\n          <tspan x='480' y='620'>\n            d=&quot;M600,500 l50,50 l-100,0 z&quot;\n          </tspan>\n        </text>\n        <path d='M600,550 l50,50 l-100,0 z' />\n\n        <path\n          id='lineAB'\n          d='M 100 350 l 150 -300'\n          stroke='red'\n          strokeWidth='3'\n          fill='none'\n        />\n        <path\n          id='lineBC'\n          d='M 250 50 l 150 300'\n          stroke='red'\n          strokeWidth='3'\n          fill='none'\n        />\n        <path\n          d='M 175 200 l 150 0'\n          stroke='green'\n          strokeWidth='3'\n          fill='none'\n        />\n        <path\n          d='M 100 350 q 150 -300 300 0'\n          stroke='blue'\n          strokeWidth='5'\n          fill='none'\n        />\n        <g stroke='black' strokeWidth='3' fill='black'>\n          <circle id='pointA' cx='100' cy='350' r='3' />\n          <circle id='pointB' cx='250' cy='50' r='3' />\n          <circle id='pointC' cx='400' cy='350' r='3' />\n        </g>\n        <g\n          fontSize='30'\n          fontFamily='sans-serif'\n          fill='black'\n          stroke='none'\n          textAnchor='middle'>\n          <text x='100' y='350' dx='-30'>\n            A\n          </text>\n          <text x='250' y='50' dy='-10'>\n            B\n          </text>\n          <text x='400' y='350' dx='30'>\n            C\n          </text>\n        </g>\n      </svg>\n    );\n  };\n}\n","import React from 'react';\nimport './PathExample.scss';\n\nexport default class Path extends React.Component {\n  render = (): JSX.Element => {\n    return (\n      <svg width='1100px' height='680px' viewBox='0 0 1100 680'>\n        <g>\n          <path\n            className='stems'\n            fill='none'\n            stroke='#7AA20D'\n            strokeWidth='8'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n            d='M54.817,169.848\n            c0,0,77.943-73.477,82.528-104.043\n            c4.585-30.566,46.364,91.186,27.512,121.498'\n          />\n          <path\n            className='leaf'\n            fill='#7AA20D'\n            stroke='#7AA20D'\n            strokeWidth='4'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n            d='M134.747,62.926\n            c-1.342-6.078,0.404-12.924,5.762-19.681\n            c11.179-14.098,23.582-17.539,40.795-17.846\n            c0.007,0,22.115-0.396,26.714-20.031\n            c-2.859,12.205-5.58,24.168-9.774,36.045\n            c-6.817,19.301-22.399,48.527-47.631,38.028\n            C141.823,75.784,136.277,69.855,134.747,62.926\n            z'\n          />\n        </g>\n        <g>\n          <path\n            className='r-cherry'\n            fill='#ED6E46'\n            stroke='#ED6E46'\n            strokeWidth='12'\n            d='M164.836,193.136\n            c1.754-0.12,3.609-0.485,5.649-1.148\n            c8.512-2.768,21.185-6.985,28.181,3.152\n            c15.076,21.845,5.764,55.876-18.387,66.523\n            c-27.61,12.172-58.962-16.947-56.383-45.005\n            c1.266-13.779,8.163-35.95,26.136-27.478\n            C155.46,191.738,159.715,193.485,164.836,193.136\n            z'\n          />\n          <path\n            className='l-cherry'\n            fill='#ED6E46'\n            stroke='#ED6E46'\n            strokeWidth='12'\n            d='M55.99,176.859\n            c1.736,0.273,3.626,0.328,5.763,0.135\n            c8.914-0.809,22.207-2.108,26.778,9.329\n            c9.851,24.647-6.784,55.761-32.696,60.78\n            c-29.623,5.739-53.728-29.614-44.985-56.399\n            c4.294-13.154,15.94-33.241,31.584-20.99\n            C47.158,173.415,50.919,176.062,55.99,176.859\n            z'\n          />\n        </g>\n        <text x='250' y='50'>\n          <tspan x='350' y='50'>\n            &lt;g&gt;\n          </tspan>\n          <tspan x='380' y='70'>\n            &lt;path\n          </tspan>\n          <tspan x='410' y='90'>\n            className=&apos;stems&apos;\n          </tspan>\n          <tspan x='410' y='110'>\n            fill=&apos;none&apos;\n          </tspan>\n          <tspan x='410' y='130'>\n            stroke=&apos;#7AA20D&apos;\n          </tspan>\n          <tspan x='410' y='150'>\n            strokeWidth=&apos;8&apos;\n          </tspan>\n          <tspan x='410' y='170'>\n            strokeLinecap=&apos;round&apos;\n          </tspan>\n          <tspan x='410' y='190'>\n            strokeLinejoin=&apos;round&apos;\n          </tspan>\n          <tspan x='410' y='210'>\n            d=&apos;M54.817,169.848\n          </tspan>\n          <tspan x='440' y='230'>\n            c0,0,77.943-73.477,82.528-104.043\n          </tspan>\n          <tspan x='440' y='250'>\n            c4.585-30.566,46.364,91.186,27.512,121.498&apos;\n          </tspan>\n          <tspan x='380' y='270'>\n            /&gt;\n          </tspan>\n          <tspan x='410' y='290'>\n            &lt;path\n          </tspan>\n          <tspan x='410' y='310'>\n            className=&apos;leaf&apos;\n          </tspan>\n          <tspan x='410' y='330'>\n            fill=&apos;#7AA20D&apos;\n          </tspan>\n          <tspan x='410' y='350'>\n            stroke=&apos;#7AA20D&apos;\n          </tspan>\n          <tspan x='410' y='370'>\n            strokeWidth=&apos;4&apos;\n          </tspan>\n          <tspan x='410' y='390'>\n            strokeLinecap=&apos;round&apos;\n          </tspan>\n          <tspan x='410' y='410'>\n            strokeLinejoin=&apos;round&apos;\n          </tspan>\n          <tspan x='410' y='430'>\n            d=&apos;M134.747,62.926\n          </tspan>\n          <tspan x='440' y='450'>\n            c-1.342-6.078,0.404-12.924,5.762-19.681\n          </tspan>\n          <tspan x='440' y='470'>\n            c11.179-14.098,23.582-17.539,40.795-17.846\n          </tspan>\n          <tspan x='440' y='490'>\n            c0.007,0,22.115-0.396,26.714-20.031\n          </tspan>\n          <tspan x='440' y='510'>\n            c-2.859,12.205-5.58,24.168-9.774,36.045\n          </tspan>\n          <tspan x='440' y='530'>\n            c-6.817,19.301-22.399,48.527-47.631,38.028\n          </tspan>\n          <tspan x='440' y='550'>\n            C141.823,75.784,136.277,69.855,134.747,62.926\n          </tspan>\n          <tspan x='440' y='570'>\n            z&apos;\n          </tspan>\n          <tspan x='380' y='590'>\n            /&gt;\n          </tspan>\n          <tspan x='350' y='610'>\n            &lt;/g&gt;\n          </tspan>\n        </text>\n      </svg>\n    );\n  };\n}\n","export type animation = {\n  tag: string;\n  attributeName: string;\n  type?: string;\n  from?: string;\n  to?: string;\n  dur?: string;\n  repeatCount?: string;\n  path?: string;\n};\n\nexport type filter = {\n  tag: string;\n  id: string;\n  x?: string;\n  y?: string;\n  dx?: string;\n  dy?: string;\n  width?: string;\n  height?: string;\n  stdDeviation?: string;\n  type?: string;\n  baseFrequency?: string;\n  numOctaves?: string;\n  result?: string;\n  in?: string;\n  in2?: string;\n  scale?: string;\n  xChannelSelector?: string;\n  yChannelSelector?: string;\n  operator?: string;\n  radius?: string;\n};\n\nexport type shape = {\n  tag: string;\n  width?: string;\n  height?: string;\n  points?: string;\n  x?: string;\n  y?: string;\n  r?: string;\n  x1?: string;\n  x2?: string;\n  y1?: string;\n  y2?: string;\n  rx?: string;\n  ry?: string;\n  cx?: string;\n  cy?: string;\n  text?: string;\n  clipPath?: string;\n  clipRule?: string;\n  color?: string;\n  colorInterpolation?: string;\n  colorRendering?: string;\n  cursor?: string;\n  display?: string;\n  fill?: string;\n  fillOpacity?: string;\n  fillRule?: string;\n  filter?: string;\n  mask?: string;\n  opacity?: string;\n  pointerEvents?: string;\n  shapeRendering?: string;\n  stroke?: string;\n  strokeDasharray?: string;\n  strokeDashoffset?: string;\n  strokeLinecap?: string;\n  strokeLinejoin?: string;\n  strokeMiterlimit?: string;\n  strokeOpacity?: string;\n  strokeWidth?: string;\n  transform?: string;\n  vectorEffect?: string;\n  visibility?: string;\n  href?: string;\n  animations: animation[];\n  filters: filter[];\n};\n\nconst animate: animation = {\n  tag: 'animate',\n  attributeName: '',\n  from: '',\n  to: '',\n  dur: '5s',\n  repeatCount: 'indefinite',\n};\n\nconst animateTransform: animation = {\n  tag: 'animateTransform',\n  attributeName: '',\n  type: '',\n  from: '',\n  to: '',\n  dur: '5s',\n  repeatCount: 'indefinite',\n};\n\nconst animations = [\n  Object.assign({}, animate),\n  Object.assign({}, animate),\n  Object.assign({}, animateTransform),\n  Object.assign({}, animateTransform),\n];\n\nexport const circle: shape = {\n  tag: 'circle',\n  animations: Array.from(animations),\n  filters: [],\n  cx: '135',\n  cy: '70',\n  r: '50',\n  fill: 'red',\n  stroke: 'black',\n  strokeWidth: '4',\n};\n\nexport const rectangle: shape = {\n  tag: 'rect',\n  animations: Array.from(animations),\n  filters: [],\n  x: '88',\n  y: '20',\n  rx: '20',\n  ry: '20',\n  width: '100',\n  height: '100',\n  fill: 'rgb(0,0,255)',\n  stroke: 'rgb(0,0,0)',\n  strokeWidth: '3',\n  fillOpacity: '0.1',\n  strokeOpacity: '0.9',\n};\n\nexport const line: shape = {\n  tag: 'line',\n  animations: Array.from(animations),\n  filters: [],\n  x1: '40',\n  x2: '210',\n  y1: '40',\n  y2: '100',\n  stroke: 'purple',\n  strokeWidth: '20',\n  strokeOpacity: '0.9',\n};\n\nexport const ellipse: shape = {\n  tag: 'ellipse',\n  animations: Array.from(animations),\n  filters: [],\n  cx: '135',\n  cy: '70',\n  rx: '100',\n  ry: '40',\n  fill: 'green',\n  fillOpacity: '0.7',\n  stroke: 'blue',\n  strokeWidth: '6',\n  strokeOpacity: '0.2',\n};\n\nexport const polygon: shape = {\n  tag: 'polygon',\n  animations: Array.from(animations),\n  filters: [],\n  points: '130,0 70,141 220,51 40,51 190,141',\n  stroke: 'black',\n  strokeWidth: '2',\n  strokeOpacity: '0.5',\n  fill: 'grey',\n  fillRule: 'evenodd',\n};\n\nexport const polyline: shape = {\n  tag: 'polyline',\n  animations: Array.from(animations),\n  filters: [],\n  points: '5,5 20,5 20,45 75,45 75,130 150,130 150,45 250,20',\n  stroke: 'orange',\n  strokeWidth: '4',\n  strokeOpacity: '',\n  fill: 'white',\n  fillRule: '',\n};\n\nexport const text: shape = {\n  tag: 'text',\n  animations: Array.from(animations),\n  filters: [],\n  text: 'Sample text',\n  x: '100',\n  y: '10',\n  fill: 'red',\n  transform: 'rotate(30 20,40)',\n};\n\nexport const image: shape = {\n  tag: 'image',\n  animations: Array.from(animations),\n  filters: [],\n  x: '75',\n  y: '10',\n  width: '150',\n  height: '150',\n  href:\n    'https://d1.awsstatic.com/logos/customers/Alert-Logic-logo.77c92024a8f644a898189b5fe47bf846f41c5a21.png',\n};\n","import * as objects from './objects';\n\nexport type example = {\n  header: string;\n  svg: objects.shape;\n};\n\nexport const generalExamples: example[] = [\n  {\n    header: 'Circle',\n    svg: objects.circle,\n  },\n  {\n    header: 'Rectangle',\n    svg: objects.rectangle,\n  },\n  {\n    header: 'Ellipse',\n    svg: objects.ellipse,\n  },\n  {\n    header: 'Line',\n    svg: objects.line,\n  },\n  {\n    header: 'Polygon',\n    svg: objects.polygon,\n  },\n  {\n    header: 'Polyline',\n    svg: objects.polyline,\n  },\n  {\n    header: 'Text',\n    svg: objects.text,\n  },\n  {\n    header: 'Image',\n    svg: objects.image,\n  },\n];\n\nconst replaceAnimation = (\n  shape: objects.shape,\n  animation: objects.animation\n): objects.shape => {\n  const newShape = Object.assign({}, shape);\n  newShape.animations = [Object.assign({}, animation)];\n  return newShape;\n};\n\nconst replaceFilter = (\n  shape: objects.shape,\n  filter: objects.filter\n): objects.shape => {\n  const newShape = Object.assign({}, shape);\n  newShape.filter = `url(#${filter.id})`;\n  newShape.filters = [Object.assign({}, filter)];\n  return newShape;\n};\n\nexport const animationExamples: example[] = [\n  {\n    header: 'Animate on X',\n    svg: replaceAnimation(objects.rectangle, {\n      tag: 'animate',\n      attributeName: 'x',\n      from: '0',\n      to: '200',\n      dur: '5s',\n      repeatCount: 'indefinite',\n    }),\n  },\n  {\n    header: 'Animate on Y',\n    svg: replaceAnimation(objects.rectangle, {\n      tag: 'animate',\n      attributeName: 'y',\n      from: '0',\n      to: '100',\n      dur: '5s',\n      repeatCount: 'indefinite',\n    }),\n  },\n  {\n    header: 'AnimateTransform (rotate)',\n    svg: replaceAnimation(objects.rectangle, {\n      tag: 'animateTransform',\n      attributeName: 'transform',\n      type: 'rotate',\n      from: '0 138 70',\n      to: '360 138 70',\n      dur: '5s',\n      repeatCount: 'indefinite',\n    }),\n  },\n  {\n    header: 'AnimateTransform (scale)',\n    svg: replaceAnimation(objects.rectangle, {\n      tag: 'animateTransform',\n      attributeName: 'transform',\n      type: 'scale',\n      from: '0 0',\n      to: '1 1',\n      dur: '5s',\n      repeatCount: 'indefinite',\n    }),\n  },\n  {\n    header: 'AnimateTransform (translate)',\n    svg: replaceAnimation(objects.rectangle, {\n      tag: 'animateTransform',\n      attributeName: 'transform',\n      type: 'translate',\n      from: '0, 0',\n      to: '100,-50',\n      dur: '5s',\n      repeatCount: 'indefinite',\n    }),\n  },\n  {\n    header: 'AnimateTransform (skewX)',\n    svg: replaceAnimation(objects.rectangle, {\n      tag: 'animateTransform',\n      attributeName: 'transform',\n      type: 'skewX',\n      from: '0',\n      to: '35',\n      dur: '5s',\n      repeatCount: 'indefinite',\n    }),\n  },\n  {\n    header: 'AnimateTransform (skewY)',\n    svg: replaceAnimation(objects.rectangle, {\n      tag: 'animateTransform',\n      attributeName: 'transform',\n      type: 'skewY',\n      from: '0',\n      to: '35',\n      dur: '5s',\n      repeatCount: 'indefinite',\n    }),\n  },\n  {\n    header: 'AnimateMotion',\n    svg: replaceAnimation(objects.rectangle, {\n      tag: 'animateMotion',\n      attributeName: '0',\n      path: 'M-40,0 A120,120 -45 0,1 110 10 A120,120 -45 0,1 10,110Z',\n      dur: '5s',\n      repeatCount: 'indefinite',\n    }),\n  },\n];\n\nexport const filterExamples: example[] = [\n  {\n    header: 'Filter (feGaussianBlur)',\n    svg: replaceFilter(objects.rectangle, {\n      tag: 'feGaussianBlur',\n      id: 'feGaussianBlur',\n      stdDeviation: '2',\n    }),\n  },\n  {\n    header: 'Filter (feTurbulence)',\n    svg: replaceFilter(objects.rectangle, {\n      tag: 'feTurbulence',\n      id: 'feTurbulence',\n      type: 'turbulence',\n      baseFrequency: '0.09',\n      numOctaves: '3',\n    }),\n  },\n  {\n    header: 'Filter (feDisplacementMap)',\n    svg: replaceFilter(objects.rectangle, {\n      tag: 'feDisplacementMap',\n      id: 'feDisplacementMap',\n      scale: '50',\n      xChannelSelector: 'B',\n      yChannelSelector: 'R',\n    }),\n  },\n  {\n    header: 'Filter (feTile)',\n    svg: replaceFilter(objects.rectangle, {\n      tag: 'feTile',\n      id: 'feTile',\n      in: 'SourceGraphic',\n      x: '50',\n      y: '50',\n      width: '100',\n      height: '100',\n    }),\n  },\n  {\n    header: 'Filter (feOffset)',\n    svg: replaceFilter(objects.rectangle, {\n      tag: 'feOffset',\n      id: 'feOffset',\n      in: 'SourceGraphic',\n      dx: '50',\n      dy: '50',\n    }),\n  },\n  {\n    header: 'Filter (feMorphology)',\n    svg: replaceFilter(objects.rectangle, {\n      tag: 'feMorphology',\n      id: 'feMorphology1',\n      operator: 'erode',\n      radius: '2',\n    }),\n  },\n  {\n    header: 'Filter (feMorphology)',\n    svg: replaceFilter(objects.rectangle, {\n      tag: 'feMorphology',\n      id: 'feMorphology2',\n      operator: 'dilate',\n      radius: '2',\n    }),\n  },\n];\n","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport {\n  SvgFullCard,\n  SvgSingleCard,\n  NavMenu,\n  WhatIsSvg,\n  WhySvg,\n  Path,\n  PathExample,\n  Others,\n} from './components/index';\nimport {\n  generalExamples,\n  animationExamples,\n  filterExamples,\n} from './resources/exampleList';\nimport './App.scss';\n\nclass App extends React.Component {\n  bodyContent = (content: JSX.Element[]): JSX.Element => {\n    return (\n      <div id='content-wrapper' className='d-flex flex-column'>\n        <div id='content'>\n          <div className='row'>{content}</div>\n        </div>\n      </div>\n    );\n  };\n\n  render(): JSX.Element {\n    return (\n      <div className='App'>\n        <div id='wrapper'>\n          <BrowserRouter>\n            <NavMenu />\n            <Switch>\n              <Route path='/why-svg'>\n                <WhySvg />\n              </Route>\n              <Route path='/what-is-svg'>\n                <WhatIsSvg />\n              </Route>\n              <Route path='/playground'>\n                {this.bodyContent(\n                  generalExamples.map((example, index) => (\n                    <div className='col' key={index}>\n                      <SvgFullCard header={example.header} svg={example.svg} />\n                    </div>\n                  ))\n                )}\n              </Route>\n              <Route path='/shapes'>\n                {this.bodyContent(\n                  generalExamples.map((example, index) => (\n                    <div className='col' key={index}>\n                      <SvgSingleCard\n                        header={example.header}\n                        svg={example.svg}\n                      />\n                    </div>\n                  ))\n                )}\n              </Route>\n              <Route path='/animations'>\n                {this.bodyContent(\n                  animationExamples.map((example, index) => (\n                    <div className='col' key={index}>\n                      <SvgSingleCard\n                        header={example.header}\n                        svg={example.svg}\n                      />\n                    </div>\n                  ))\n                )}\n              </Route>\n              <Route path='/filters'>\n                {this.bodyContent(\n                  filterExamples.map((example, index) => (\n                    <div className='col' key={index}>\n                      <SvgSingleCard\n                        header={example.header}\n                        svg={example.svg}\n                      />\n                    </div>\n                  ))\n                )}\n              </Route>\n              <Route path='/path'>\n                <Path />\n              </Route>\n              <Route path='/path-example'>\n                <PathExample />\n              </Route>\n              <Route path='/others'>\n                <Others />\n              </Route>\n            </Switch>\n          </BrowserRouter>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './sb-admin-2.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}